Belows are SQL queries to
1 - Customer Demographics Analysis
Objective: Analyze customer demographics like age, marital status, and education level.

Count of customers by job type:
SELECT job, COUNT(*) AS customer_count
FROM customers
GROUP BY job;

Average age by education level:
SELECT education, AVG(age) AS avg_age
FROM customers
GROUP BY education;

Number of married vs. single customers:
SELECT marital, COUNT(*) AS customer_count
FROM customers
GROUP BY marital;

2 - Loan and Balance Correlation
Objective: Investigate the relationship between whether a customer has a loan and their account balance.

Average balance for customers with and without a loan:
SELECT loan, AVG(balance) AS avg_balance
FROM customers
GROUP BY loan;

Count of customers with loan by job type:
SELECT job, COUNT(*) AS customer_count
FROM customers
WHERE loan = 'yes'
GROUP BY job;

3 - Campaign Effectiveness
Objective: Evaluate how successful the marketing campaign is, based on previous contact outcomes and customer subscription.

Conversion rate of customers who were contacted:
SELECT contact, 
       COUNT(CASE WHEN y = 'yes' THEN 1 END) AS converted_customers,
       COUNT(*) AS total_customers,
       (COUNT(CASE WHEN y = 'yes' THEN 1 END) * 100 / COUNT(*)) AS conversion_rate
FROM customers
GROUP BY contact;

Outcome of the campaign based on previous marketing campaign results:
SELECT poutcome, 
       COUNT(CASE WHEN y = 'yes' THEN 1 END) AS converted_customers,
       COUNT(*) AS total_customers
FROM customers
GROUP BY poutcome;

4- Seasonal Trends in Marketing Campaigns
Objective: Analyze whether certain months show better campaign success.

Subscription rate by month:
SELECT month, 
       COUNT(CASE WHEN y = 'yes' THEN 1 END) AS subscribed_count,
       COUNT(*) AS total_customers,
       (COUNT(CASE WHEN y = 'yes' THEN 1 END) * 100 / COUNT(*)) AS subscription_rate
FROM customers
GROUP BY month;

5- Churn Analysis
Objective: Analyze the factors contributing to customer churn (not subscribing to the product).

SELECT job, 
       COUNT(CASE WHEN y = 'no' THEN 1 END) AS churn_count,
       COUNT(*) AS total_customers,
       (COUNT(CASE WHEN y = 'no' THEN 1 END) * 100 / COUNT(*)) AS churn_rate
FROM customers
GROUP BY job;    
